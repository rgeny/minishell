EXPORT :
	- test 1 : N'est pas exécuté avec le testeur à cause d'un résultat étrange.. Testé pour savoir !
		./minishell
		export			(à comparer avec bash)


SIGNAUX :
	- test 1 :
		./minishell
		ctrl+c			(retourne à la ligne en affichant le prompt)
		echo $?			(affiche "130\n")
	
	- test 2 :
		./minishell
		ctrl + d		(Ferme minishell et affiche "exit")
		echo $?			(Affiche 0)

	- test 3 :
		./minishell
		ctrl + \		(Ne fait rien)

	- test 4 :
		./minishell
		make re
		ctrl + c		(Si lancé pendant la recompilation, l'interrompt sans interrompre minishell)
		echo $?			(affiche 130)

	- test 6 :
		./minishell
		make re
		ctrl + d		(Si lancé pendant la recompilation, ne fait rien)
	
	- test 7 :
		./minishell
		make re
		ctrl + \		(si lancé pendant la recompilation, l'interrompt sans interrompre minishell)
		echo $?			affiche 1

	- test 7 :
		printf "make re" | ./minishell
		ctrl + c		(interrompt minishell, minishell ne doit pas afficher de prompt ni exit à la fin)
		echo $?			(affiche 130)
	
	- test 8 :
		printf "make re" | ./minishell
		ctrl + d		(ne fait rien)
	
	- test 9 :
		printf "make re" | ./minishell
		ctrl + \		(interrompt minishell)
		echo $?			(affiche 1)

	- test 10 :
		./minishell
		<< end
		ctrl + c		(interrompt heredoc et les commandes)
		echo $?			(affiche 130)
	
	- test 11 :
		./minishell
		<< end
		ctrl + c
		ls				(affiche le résultat normal de ls)

	- test 12 :
		./minishell
		<< end
		ctrl + d		(interrompt heredoc, affiche un message d'erreur et exécute quand même les commandes)
	
	- test 13 :
		./minishell
		<< end cat
		a
		b
		ctrl + d		(Interrompt heredoc, affiche un message d'erreur et affiche "a\nb")

	- test 14 :
		./minishell
		<< end
		ctrl + \		(ne fait rien)

TOKENIZER (Tous ces test doivent afficher une erreur, avec, potentiellement, le code erreur 2)

	- test 1 :
		|

	- test 2 :
		echo a > > b
	
	- test 3 :
		echo a >>> b
	
	- test 4 :
		echo a ||

	- test 5 :
		echo a &&
	
	- test 6 :
		;
